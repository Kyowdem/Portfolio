{
    "BTS": {
        "stage": [
            {
                "name": "Le maquetage des pages",
                "description": {
                    "presentation de l'entreprise": null,
                    "contexte": "Etant une grande entreprise, ils ont besoin de gérer des entrants, des sortants ou des migrations vers d’autres postes ou endroits. J’étais donc chargé de faire un site web interne à l’entreprise lié à la base de données que je montrerais prochainement. Je vais vous montrer uniquement ce que j’ai pu faire dans la rubrique entrée.",
                    "besoin": "L'entreprise nécessitait une application, simple d'utilisation et de compréhension, permettant de suivre la trace d'une entrée ou d'une sortie d'une personne. Le produit sera utilisé par les Ressources Humaines.",
                    "environnement technologique": "J'ai utilisé le logiciel Atom, très simple d'utilisation, et prenant peu de place sur le poste à ma disposition. J’ai majoritairement utilisé du JavaScript ainsi qu’un Framework au nom de jQuery. Le Framework permet non seulement de réduire le code JS mais également d’utiliser Ajax, nous le verrons dans le second contexte.",
                    "realisation": null,
                    "bilan": "J'ai réalisé un site web interne à une entreprise utilisant du JavaScript, avec le Framework jQuery. Grâce à l’utilisation de ces outils, j’ai pu ajouter des animations facilitant la compréhension et l’utilisation du site. Le site n'est pas parfaitement achevé. Néanmoins, les quatre pages que j'ai mises au point sont sans bug et sont prêtes à l'utilisation. J'avais beaucoup de mal au début, j’ai dû m’adapter au Framework jQuery, inconnu pour moi avant de travailler sur ce projet. Je n’avais pas énormément d’expérience sur JavaScript non plus. Toutefois, j’ai eu la chance d’avoir un bon tuteur qui me cadrais. Ce stage était par conséquent très enrichissant pour moi."
                }
            },
            {
                "name": "Ajax, le chargement des pages",
                "description": {
                    "presentation de l'entreprise": null,
                    "contexte": "Sur une page principale, un formulaire qui pour chaque bouton suivant, changera de div et passer donc à la page suivante du formulaire. Elle aura besoin des données de la base et le tout sans actualisé la page.",
                    "besoin": "L’utilisation de la méthode Ajax va permettre de chercher des données au sein de la base de données. Pour les faire charger on appellera une div. Cette méthode est simple d’utilisation, guidée établie par étapes pour ne pas perdre l’utilisateur. C’est pour cette raison que je l’ai utilisée.",
                    "environnement technologique": "J'ai utilisé le logiciel Atom pour ce second contexte. Comme pour le premier, j’ai majoritairement utilisé du JavaScript ainsi que le Framework jQuery pour pouvoir faire du Ajax.",
                    "realisation": null,
                    "bilan": "Le début était assez difficile à comprendre. En effet, pour utiliser Ajax il faut connaitre un peu jQuery. Heureusement, l’adaptation s’est rapidement réalisée et l’aspect asynchrone permet énormément de possibilités. C’était une expérience très enrichissante qui m’as appris de nouveaux outils de travaux. Je n’hésiterais pas à les réutiliser."
                }
            },
            {
                "name": "Signalement d'une erreur, popup",
                "description": {
                    "presentation de l'entreprise": null,
                    "contexte": "Dans l’entreprise, des personnes sont souvent en déplacement et doivent rédiger une note pour se faire rembourser la somme dépenser pendant le déplacement.",
                    "besoin": "Il fallait essayer d’automatiser le plus possible pour faciliter et gagner du temps a la personne en prenant simplement en photo la facture et un logiciel s’occupe de savoir si la photo n’est pas floue pour ensuite la lire et remplir les champs d’un formulaire automatiquement, et les envoyer dans une base de données.",
                    "environnement technologique": "Visual Studio Code comme éditeur de notre code. Tesseract est un logiciel qui va lire une image et retourner le texte écris sur l’image, nodeJs va servir à lancer le logiciel Tesseract, écrire un fichier texte dans un répertoire temp et le supprimer ensuite, et j’ai essayé un logiciel qu’un collègue m’as conseillé pour faire le MLR qui est Visual paradigm.",
                    "realisation": [
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Au début je n’étais pas partie sur un pop-up mais sur une page entière, mais j’ai trouvé ça trop lourd et moins intuitif pour l’utilisateur alors j’ai changé en utilisant le pop-up appeler aussi dialog, de jQuery-ui. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/Ouverture_dialog.png\" alt=\"Ouverture_dialog.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Il fallait ensuite bien organiser tout ça, j’ai donc utilisé les mêmes titres que les Tabs qu’on peut voir au-dessus du dialog et il y avait même déjà toute l’architecture alors j’ai utilisé ça pour produire la suite. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/modif_date.png\" alt=\"modif_date.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">On peut aussi voir le datapicker de jQuery-ui que j’ai utilisé à chaque fois que le mot date apparaissant dans la sous-catégorie (Contexte = Situation de famille, Sous-catégorie = Date[…]changement, on ne voit pas la catégorie sur ce screen) J’ai donc ensuite pris toute ces informations et je les ai ajoutés à la base de données qu’on avait créée. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/ajout_donnees_enfant.png\" alt=\"ajout_donnees_enfant.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Le code que j’ai fait a principalement été fait en orienté objet mais aussi aspect pour permettre de gérer chaque objet qui sera créé, cela permet d’éviter le mot clé new mais surtout de centralisé tous les objets dans un objet mère. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/code_create_select.png\" alt=\"code_create_select.png\" class=\"img-fluid\"> </div>",
                        "</div>"
                    ],
                    "bilan": "J’ai appris ce qu’était de la programmation orienté aspect et ce que cela pouvait impliquer et ça m’a aussi permis de mieux structurer mon code et de le documenter."
                }
            },
            {
                "name": "Lire une facture avec nodeJs et Tesseract",
                "description": {
                    "presentation de l'entreprise": null,
                    "contexte": "Sur une page principale, un formulaire qui pour chaque bouton suivant, changera de div et passer donc à la page suivante du formulaire. Elle aura besoin des données de la base et le tout sans actualisé la page.",
                    "besoin": "L’utilisation de la méthode Ajax va permettre de chercher des données au sein de la base de données. Pour les faire charger on appellera une div. Cette méthode est simple d’utilisation, guidée établie par étapes pour ne pas perdre l’utilisateur. C’est pour cette raison que je l’ai utilisée.",
                    "environnement technologique": "J'ai utilisé le logiciel Atom pour ce second contexte. Comme pour le premier, j’ai majoritairement utilisé du JavaScript ainsi que le Framework jQuery pour pouvoir faire du Ajax.",
                    "realisation": [
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Avant de commencer à coder, j’ai modéliser un MLR grâce à une ancienne application que l’entreprise avait développée, c’est alors à partir de ça que j’ai fait toute les entités et que j’ai finis et valider par mon tuteur le MLR qui ressemblais à ça. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/MCD.png\" alt=\"MCD.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">J’ai ensuite bien pris le temps de me renseigner sur NodeJs car pour lancer un exe je n’avais pas le choix de l’utiliser, et c’est sur YouTube avec les tutoriels de grafikart, qui sont d’une clarté extrême. Après 2 jours, je me suis enfin lancé et j’ai commencé par essayer de lancer Tesseract avec l’invite de commande </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/launch_tesseract_with_cmd.png\" alt=\"launch_tesseract_with_cmd.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">On lance le logiciel, on lui dit l’image à prendre et enfin le chemin de sortie du fichier texte. Maintenant que je sais comment l’utiliser, je vais faire mon programme JavaScript pour qu’il soit lancé par NodeJS. J’ai utilisé la fonction 'spawn' qui permet de lancer programme. <br> J’ai alors pris des tickets de caisse sur internet pour faire des tests et après que c’est dernier étaient concluant, j’ai pris mes photos sur le téléphone et je me suis aperçu qu’elles étaient automatiquement penchées, alors j’ai cherché un programme déjà fais par la communauté pour retourner automatiquement ma photo. Mon code donnait à la fin ça : </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/code_start_tesseract.png\" alt=\"code_start_tesseract.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-6 col-md-6\"><div>J’ai pris cette facture</div><img src=\"http://hostName/src/assets/img/stage/2eme_annee/ticket_caisse.png\" alt=\"ticket_caisse.png\" class=\"img-fluid\" width=\"350px\"> </div> <div class=\"col-lg-6 col-md-6\">et le résultat de Tesseract donnait ça <img src=\"http://hostName/src/assets/img/stage/2eme_annee/texte_stdout.png\" alt=\"texte_stdout.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Avec mon tuteur on s’est aperçu que souvent le prix était affiché plusieurs fois sur une facture alors ma fonction avait pour but de prendre tous les chiffres du fichier texte, pour prendre  ensuite le chiffre qui apparaissait le plus de fois j’ai alors écrit ma fonction, lancer mon script et il retournait ça </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/resultat_tesseract.png\" alt=\"resultat_tesseract.png\" class=\"img-fluid\"> </div>",
                        "</div>",
                        "<div data-aos=\"fade-right\" class=\"row\">",
                        "<div class=\"col-lg-12 col-md-12\">Une première ligne disant que le fichier est déjà droit alors pas besoin de le retourner, il m’affiche en second le prix et le reste se sont simplement des indications qui explique que le programme a été arrêter et que le fichier texte a bien été supprimer.</div>",
                        "</div>"
                    ],
                    "bilan": "J’ai appris ce que pouvais faire NodeJs et étant donné que c’est une technologie utilisant du JavaScript ça a été moins dur de compréhension pour moi. J’ai pu bien comprendre l’utilité de NodeJS ce qui va me permettre de mieux comprendre VueJs mon thème de veille."
                }
            }
        ],
        "PPE": []
    },
    "UQAM": {}
}