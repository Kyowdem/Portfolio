{
    "BTS": {
        "stage": [
            {
                "name": "1ère année",
                "print": false,
                "contexts": [
                    {
                        "name": "Le maquetage des pages",
                        "description": {
                            "presentation de l'entreprise": "<a href=\"https://www.lmhabitat.fr/home/mieux-nous-connaitre/qui-sommes-nous/nos-missions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Lyon Métropole Habitat<\/a> est une grande entreprise située sur plusieurs secteurs. Le siège de cette dernière se trouve dans le troisième arrondissement de Lyon. L’entreprise a pour but principal de vendre et de faire louer des appartements. Ils possèdent plusieurs secteurs tel que le secteur informatique ou les ressources humaines.",
                            "contexte": "Etant une grande entreprise, ils ont besoin de gérer des entrants, des sortants ou des migrations vers d’autres postes ou endroits. J’étais donc chargé de faire un site web interne à l’entreprise lié à la base de données que je montrerais prochainement. Je vais vous montrer uniquement ce que j’ai pu faire dans la rubrique entrée.",
                            "besoin": "L'entreprise nécessitait une application, simple d'utilisation et de compréhension, permettant de suivre la trace d'une entrée ou d'une sortie d'une personne. Le produit sera utilisé par les Ressources Humaines.",
                            "environnement technologique": "J'ai utilisé le logiciel Atom, très simple d'utilisation, et prenant peu de place sur le poste à ma disposition. J’ai majoritairement utilisé du JavaScript ainsi qu’un Framework au nom de jQuery. Le Framework permet non seulement de réduire le code JS mais également d’utiliser Ajax, nous le verrons dans le second contexte.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">J’ai fait une première page avec le peu de donnée que l’on m’avait dit avec de simple carré et du texte dedans. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/premiere_page.png\" alt=\"premiere_page.png\" class=\"img-fluid\"></div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Une première page peut être trop simple pour les personnes venant des Ressources Humaine j’ai donc dû la refaire et j’ai finis par faire ça </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/accueil(menuOuvert).png\" alt=\"accueil(menuOuvert).png\" class=\"img-fluid\"></div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Une page simple avec la possibilité de faire de sous menu j’ai montré ça aux RH et le code à mon tuteur puis il m’a dit de tout refaire mais en orienté objet. J’ai eu beaucoup de mal au début puis j’y ai pris gout et toute cette première page était en objet </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/Atom_code_accueil.png\" alt=\"Atom_code_accueil.png\" class=\"img-fluid\"></div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Un ajout, une modification ou une suppression à la fois simple et rapide tout était fait pour que le développeur fasse simplement ce qu’il voulait. Il fallait donc ensuite continuer comme  cela et faire la suite de ce site, j’ai commencé par faire l’entrée d’une personne dans l’entreprise, mais avant de commencer j’ai demandé les attentes de mon tuteur, soit, une page qui reste la même cela sera seulement un remplacement de div que l’on fera avec Ajax (Voir dans le 2eme contexte). J’ai alors produis cela </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/entre.png\" alt=\"entre.png\" class=\"img-fluid\"></div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Enfin ça c’était le screen final, nous ne voyons pas mais grâce à jQuery j’ai pu faire quelque animation qui était aussi là pour faire camoufler le temps de chargement de la prochaine div </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/rtt.png\" alt=\"rtt.png\" class=\"img-fluid\"></div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Je n’ai plus le code mais cette page était elle aussi complètement en objet. On pouvait dans le code sélectionner les jours et ou les demi-journée qu’on voulait griser simplement en tapant le nom de la journée.</div>",
                                "</div>"
                            ],
                            "bilan": "J'ai réalisé un site web interne à une entreprise utilisant du JavaScript, avec le Framework jQuery. Grâce à l’utilisation de ces outils, j’ai pu ajouter des animations facilitant la compréhension et l’utilisation du site. Le site n'est pas parfaitement achevé. Néanmoins, les quatre pages que j'ai mises au point sont sans bug et sont prêtes à l'utilisation. J'avais beaucoup de mal au début, j’ai dû m’adapter au Framework jQuery, inconnu pour moi avant de travailler sur ce projet. Je n’avais pas énormément d’expérience sur JavaScript non plus. Toutefois, j’ai eu la chance d’avoir un bon tuteur qui me cadrais. Ce stage était par conséquent très enrichissant pour moi."
                        }
                    },
                    {
                        "name": "Ajax, le chargement des pages",
                        "description": {
                            "presentation de l'entreprise": "<a href=\"https://www.lmhabitat.fr/home/mieux-nous-connaitre/qui-sommes-nous/nos-missions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Lyon Métropole Habitat<\/a> est une grande entreprise située sur plusieurs secteurs. Le siège de cette dernière se trouve dans le troisième arrondissement de Lyon. L’entreprise a pour but principal de vendre et de faire louer des appartements. Ils possèdent plusieurs secteurs tel que le secteur informatique ou les ressources humaines.",
                            "contexte": "Sur une page principale, un formulaire qui pour chaque bouton suivant, changera de div et passer donc à la page suivante du formulaire. Elle aura besoin des données de la base et le tout sans actualisé la page.",
                            "besoin": "L’utilisation de la méthode Ajax va permettre de chercher des données au sein de la base de données. Pour les faire charger on appellera une div. Cette méthode est simple d’utilisation, guidée établie par étapes pour ne pas perdre l’utilisateur. C’est pour cette raison que je l’ai utilisée.",
                            "environnement technologique": "J'ai utilisé le logiciel Atom pour ce second contexte. Comme pour le premier, j’ai majoritairement utilisé du JavaScript ainsi que le Framework jQuery pour pouvoir faire du Ajax.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">J’ai beaucoup utilisé la documentation de jQuery et d’Ajax, qui sont très bien faites. La présence de mon tuteur m’a aussi permis de mieux m’initier là-dedans.</div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Après plusieurs modifications, cette page était utilisée comme principale pour le site. Cette dernière complètement orienté objet permet la facilité au futur modification qu’ils voudront apporter.</div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/Accueil(menuOuvert).png\" alt=\"Accueil(menuOuvert).png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Dans ce menu, quand on allait dans un contexte, par exemple une entrée, on se retrouvait sur cette page qui étais généré complètement en JavaScript et faisais charger les données des menus déroulant grâce à Ajax, car nous avions besoin de charger les données sans recharger la page. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/Entre.png\" alt=\"Entre.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Je pouvais ensuite me rediriger vers les autres pages lors d’un clic sur le bouton suivant ou précédent, sans changer de page c'était juste un remplacement de div, et donc lorsque je cliquais cela faisais charger grâce à Ajax les données de la page concerné. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/equipement.png\" alt=\"equipement.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">On peut voir sur un bout de code ci-dessous où lors d’un clic, Ajax allais faire charger la page souhaité.</div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/1ere_annee/ajax_code.png\" alt=\"ajax_code.png\" class=\"img-fluid\"> </div>",
                                "</div>"
                            ],
                            "bilan": "Le début était assez difficile à comprendre. En effet, pour utiliser Ajax il faut connaitre un peu jQuery. Heureusement, l’adaptation s’est rapidement réalisée et l’aspect asynchrone permet énormément de possibilités. C’était une expérience très enrichissante qui m’as appris de nouveaux outils de travaux. Je n’hésiterais pas à les réutiliser."
                        }
                    }
                ]
            },
            {
                "name": "2ème année",
                "print": false,
                "contexts": [
                    {
                        "name": "Signalement d'une erreur, popup",
                        "description": {
                            "presentation de l'entreprise": "<a href=\"https://www.lmhabitat.fr/home/mieux-nous-connaitre/qui-sommes-nous/nos-missions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Lyon Métropole Habitat<\/a> est une grande entreprise située sur plusieurs secteurs. Le siège de cette dernière se trouve dans le troisième arrondissement de Lyon. L’entreprise a pour but principal de vendre et de faire louer des appartements. Ils possèdent plusieurs secteurs tel que le secteur informatique ou les ressources humaines.",
                            "contexte": "Dans l’entreprise, des personnes sont souvent en déplacement et doivent rédiger une note pour se faire rembourser la somme dépenser pendant le déplacement.",
                            "besoin": "Il fallait essayer d’automatiser le plus possible pour faciliter et gagner du temps a la personne en prenant simplement en photo la facture et un logiciel s’occupe de savoir si la photo n’est pas floue pour ensuite la lire et remplir les champs d’un formulaire automatiquement, et les envoyer dans une base de données.",
                            "environnement technologique": "Visual Studio Code comme éditeur de notre code. Tesseract est un logiciel qui va lire une image et retourner le texte écris sur l’image, nodeJs va servir à lancer le logiciel Tesseract, écrire un fichier texte dans un répertoire temp et le supprimer ensuite, et j’ai essayé un logiciel qu’un collègue m’as conseillé pour faire le MLR qui est Visual paradigm.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Au début je n’étais pas partie sur un pop-up mais sur une page entière, mais j’ai trouvé ça trop lourd et moins intuitif pour l’utilisateur alors j’ai changé en utilisant le pop-up appeler aussi dialog, de jQuery-ui. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/Ouverture_dialog.png\" alt=\"Ouverture_dialog.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Il fallait ensuite bien organiser tout ça, j’ai donc utilisé les mêmes titres que les Tabs qu’on peut voir au-dessus du dialog et il y avait même déjà toute l’architecture alors j’ai utilisé ça pour produire la suite. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/modif_date.png\" alt=\"modif_date.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">On peut aussi voir le datapicker de jQuery-ui que j’ai utilisé à chaque fois que le mot date apparaissant dans la sous-catégorie (Contexte = Situation de famille, Sous-catégorie = Date[…]changement, on ne voit pas la catégorie sur ce screen) J’ai donc ensuite pris toute ces informations et je les ai ajoutés à la base de données qu’on avait créée. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/ajout_donnees_enfant.png\" alt=\"ajout_donnees_enfant.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Le code que j’ai fait a principalement été fait en orienté objet mais aussi aspect pour permettre de gérer chaque objet qui sera créé, cela permet d’éviter le mot clé new mais surtout de centralisé tous les objets dans un objet mère. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/code_create_select.png\" alt=\"code_create_select.png\" class=\"img-fluid\"> </div>",
                                "</div>"
                            ],
                            "bilan": "J’ai appris ce qu’était de la programmation orienté aspect et ce que cela pouvait impliquer et ça m’a aussi permis de mieux structurer mon code et de le documenter."
                        }
                    },
                    {
                        "name": "Lire une facture avec nodeJs et Tesseract",
                        "description": {
                            "presentation de l'entreprise": "<a href=\"https://www.lmhabitat.fr/home/mieux-nous-connaitre/qui-sommes-nous/nos-missions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Lyon Métropole Habitat<\/a> est une grande entreprise située sur plusieurs secteurs. Le siège de cette dernière se trouve dans le troisième arrondissement de Lyon. L’entreprise a pour but principal de vendre et de faire louer des appartements. Ils possèdent plusieurs secteurs tel que le secteur informatique ou les ressources humaines.",
                            "contexte": "Sur une page principale, un formulaire qui pour chaque bouton suivant, changera de div et passer donc à la page suivante du formulaire. Elle aura besoin des données de la base et le tout sans actualisé la page.",
                            "besoin": "L’utilisation de la méthode Ajax va permettre de chercher des données au sein de la base de données. Pour les faire charger on appellera une div. Cette méthode est simple d’utilisation, guidée établie par étapes pour ne pas perdre l’utilisateur. C’est pour cette raison que je l’ai utilisée.",
                            "environnement technologique": "J'ai utilisé le logiciel Atom pour ce second contexte. Comme pour le premier, j’ai majoritairement utilisé du JavaScript ainsi que le Framework jQuery pour pouvoir faire du Ajax.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Avant de commencer à coder, j’ai modéliser un MLR grâce à une ancienne application que l’entreprise avait développée, c’est alors à partir de ça que j’ai fait toute les entités et que j’ai finis et valider par mon tuteur le MLR qui ressemblais à ça. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/MCD.png\" alt=\"MCD.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">J’ai ensuite bien pris le temps de me renseigner sur NodeJs car pour lancer un exe je n’avais pas le choix de l’utiliser, et c’est sur YouTube avec les tutoriels de grafikart, qui sont d’une clarté extrême. Après 2 jours, je me suis enfin lancé et j’ai commencé par essayer de lancer Tesseract avec l’invite de commande </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/launch_tesseract_with_cmd.png\" alt=\"launch_tesseract_with_cmd.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">On lance le logiciel, on lui dit l’image à prendre et enfin le chemin de sortie du fichier texte. Maintenant que je sais comment l’utiliser, je vais faire mon programme JavaScript pour qu’il soit lancé par NodeJS. J’ai utilisé la fonction 'spawn' qui permet de lancer programme. <br> J’ai alors pris des tickets de caisse sur internet pour faire des tests et après que c’est dernier étaient concluant, j’ai pris mes photos sur le téléphone et je me suis aperçu qu’elles étaient automatiquement penchées, alors j’ai cherché un programme déjà fais par la communauté pour retourner automatiquement ma photo. Mon code donnait à la fin ça : </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/code_start_tesseract.png\" alt=\"code_start_tesseract.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-6 col-md-6\"><div>J’ai pris cette facture</div><img src=\"http://hostName/src/assets/img/stage/2eme_annee/ticket_caisse.png\" alt=\"ticket_caisse.png\" class=\"img-fluid\" width=\"350px\"> </div> <div class=\"col-lg-6 col-md-6\">et le résultat de Tesseract donnait ça <img src=\"http://hostName/src/assets/img/stage/2eme_annee/texte_stdout.png\" alt=\"texte_stdout.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Avec mon tuteur on s’est aperçu que souvent le prix était affiché plusieurs fois sur une facture alors ma fonction avait pour but de prendre tous les chiffres du fichier texte, pour prendre  ensuite le chiffre qui apparaissait le plus de fois j’ai alors écrit ma fonction, lancer mon script et il retournait ça </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/stage/2eme_annee/resultat_tesseract.png\" alt=\"resultat_tesseract.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Une première ligne disant que le fichier est déjà droit alors pas besoin de le retourner, il m’affiche en second le prix et le reste se sont simplement des indications qui explique que le programme a été arrêter et que le fichier texte a bien été supprimer.</div>",
                                "</div>"
                            ],
                            "bilan": "J’ai appris ce que pouvais faire NodeJs et étant donné que c’est une technologie utilisant du JavaScript ça a été moins dur de compréhension pour moi. J’ai pu bien comprendre l’utilité de NodeJS ce qui va me permettre de mieux comprendre VueJs mon thème de veille."
                        }
                    }
                ]
            }
        ],
        "PPE": [
            {
                "name": "1ère année",
                "print": false,
                "contexts": [
                    {
                        "name": "Mission n°1 : Music Gone's",
                        "description": {
                            "contexte": "Mission n°1 : Music Gone's Contexte L’entreprise Music gones organise le festival de musique appelé Les nuits lyonnaises. Cette dernière a besoin d'un site web permettant aux clients d'obtenir des informations sur le festival.",
                            "besoin": "Le site avait besoin d’un peu plus de d’animation et de dynamisme. J'ai à réaliser un site dit \"responsive\" en utilisant la bibliothèque Bootstrap, pour une entreprise fictive appelée \"Music gones\". J’ai aussi principalement utilisé JavaScript pour pouvoir faire des animations et que cela soit plus agréable à regarder.",
                            "environnement technologique": "J’ai utilisé Notepad++ comme éditeur de texte pour pouvoir coder en HTML, CSS, JavaScript ainsi qu’utilisé la bibliothèque Bootstrap.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Tout au long du PPE j’ai appris les bases de JavaScript ce qu’il fallait faire et ne pas faire, j’ai aussi fait quelque recherche personnel et j’ai aussi appris grâce à ce site : http://es6-features.org. C’est un site qui répertorie les dernières normes de JavaScript. </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Plus le site avançait et moins le rendu était lourd visuellement. Sur la page principale on y fait afficher des infos générales pour ensuite lors d’un clic, un défilement se met en place et les informations souhaitées apparaissent dans une div en dessous. </div>",
                                "</div>"
                            ],
                            "bilan": "Ce PPE m’a initié à JavaScript. Plus largement, un déclic s’est réalisé en moi sur la liberté que ce langage propose. Aujourd’hui, je m’y intéresse beaucoup plus."
                        }
                    },
                    {
                        "name": "Mission n°2 : Duch’Bagels",
                        "description": {
                            "contexte": "Duch’bagels est une entreprise de restauration faisant principalement des bagels. L’entreprise est née dans le première arrondissement de Lyon et continue de s’accroitre",
                            "besoin": "Cette dernière avait besoin d’une base de donnée qui sera sur MySQL, pour pouvoir faire un futur site dynamique mais aussi des classements sur ses bagels ou tout autre type de requête.",
                            "environnement technologique": "J’ai utilisé le logiciel Xampp pour pouvoir lancer phpmyadmin qui sera hébergé en local avec apache",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row justify-content-lg-center\">",
                                "<div class=\" col-lg-12 col-md-12\">Dans le PPE, les tables et les colonnes pour le jeu d’essai étaient déjà existants dans un fichier au format SQL. Avant d’insérer les tables et les données, il fallait d’abord créer la base de données. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/create_database.png\" alt=\"create_database.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row justify-content-md-center\">",
                                "<div class=\"col-md-12\"> Après avoir créé la base, j’ai ouvert le fichier .sql dans un éditeur de texte pour pouvoir copiercoller tout le script des tables et du jeux d’essai dans MYSQL. </div> <div class=\"col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/scriptSQL.png\" alt=\"scriptSQL.png\" class=\"img-fluid centerImg\"> </div> <div class=\"col-md-6 divCenter\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/inserts.png\" alt=\"inserts.png\" class=\"img-fluid centerImg\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\"> <h4>Requête SQL</h4> </div>",
                                "<div class=\"col-md-12 col-lg-12\">Une suite de requête était demandée par l’entreprise, elle voulait par exemple savoir le prix moyen d’un bagel, une requête plutôt simple et courte. </div> <div class=\"col-ld-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/req2.png\" alt=\"req2.png\" class=\"img-fluid centerImg\"> </div> <div class=\"col-ld-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/rep_req2.png\" alt=\"rep_req2.png\" class=\"img-fluid centerImg\"> </div>",
                                "<div class=\"col-lg-12 col-md-12\">La requête du dessous est un peu plus longue car on voulait les ingrédients d’un bagel spécifique, « le chèvre miel ». </div> <div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/req1.png\" alt=\"req1.png\" class=\"img-fluid centerImg\"> </div> <div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/1ere_annee/rep_req1.png\" alt=\"rep_req1.png\" class=\"img-fluid centerImg\"> </div>",
                                "</div>"
                            ],
                            "bilan": "Ce PPE était pour nous initier un peu plus au requête SQL en nous montrant comment marche une base de données. J’ai pu mieux comprendre ce qui se cachait derrière les associations faites avec des joints."
                        }
                    }
                ]
            },
            {
                "name": "2ème année",
                "print": false,
                "contexts": [
                    {
                        "name": "Mission n°1 : Judge Movies",
                        "description": {
                            "contexte": "Des étudiants ambitieux veulent rivaliser avec Netflix. Pour cela, ils ont réalisé leur site bénévolement. Et ce dernier s’avère être plus attractif que celui du géant Netflix.",
                            "besoin": "Nous avions besoin d’une base de données permettant une dynamisation plus forte du site en faisant communiquer les données de la base et le site ensemble. Il fallait aussi créer une interaction entre utilisateur.",
                            "environnement technologique": "Pour cela nous avons utilisé HTML 5 et CSS 3. Pour mettre en forme les animations, nous avons utilisé JavaScript et son Framework jQuery. Cela nous a permis par la même occasion d’utiliser Ajax, qui chargera dynamiquement nos données, c’est-à-dire sans recharger la page. Nous avons aussi utilisé PHP avec son Framework Laravel pour avoir une architecture MVC, pour mieux structurer notre code.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Dans notre groupe, je me suis occupé de la partie design et dynamique du site. Pour cela, j’ai utilisé jQuery et Ajax. J’ai également utilisé la librairie slick, afin de produire un carrousel qui répondais à mes attentes et qui était très facile d’utilisation. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/accueil.png\" alt=\"accueil.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Mais pour voir un film et l’acheter il faut d’abord se connecter. Pour donner un rendu tout aussi simple que dynamique et en mettant surtout une petite touche de jaune aux pages login et inscription, j’ai paramétré un fond avec des particules animées dans un fond noir grâce à l’outil « particules.js ». </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/login.png\" alt=\"login.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Une fois le login crée ainsi que la page d’accueil avec le carrousel des films, lors du clic il fallait afficher une page simple et semblable pour toute. Je me suis donc occupé de la page film en faisant une page qui envoyais directement le lien de la bande annonce du film, son titre, ces réalisateurs, ces acteurs et ça note sur le site </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/Film_haut.png\" alt=\"Film_haut.png\" class=\"img-fluid\"> </div>",
                                "<div class=\"col-lg-12 col-md-12\">sur la photo la balise iframe a juste un petit problème. La page faisait juste charger les données depuis la base mais j’ai quand même voulu garder l’aspect dynamique alors j’ai juste rajouté des étoiles pour que l’utilisateur note sur 5 le film. </div> <div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/film_bas.png\" alt=\"film_bas.png\" class=\"img-fluid\"> </div> <div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/code_etoile_film.png\" alt=\"code_etoile.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">En tant qu’admin nous pouvons rajouter des films et même cela est animé. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/ajout_film.png\" alt=\"ajout_film.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Si un Acteur n’est pas dans la liste, nous avons juste à cliquer sur le bouton à droite pour faire apparaitre un formulaire de saisie. Ce dernier ajoute l’acteur au select sans avoir à rafraichir la page, elle se charge automatiquement grâce à Ajax. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/Judge_movies/ajoute_real.png\" alt=\"ajoute_real.png\" class=\"img-fluid\"> </div>",
                                "</div>"
                            ],
                            "bilan": "J’ai adoré travailler sur ce projet, nous étions indépendants et nous devions tout gérer. Ce travail repose sur nos expériences, chaque personne avait sa spécialité et si c’était à refaire je ne le referais pas en Laravel. Mais dans un projet plus orienté JavaScript tel que VueJs ou ReactJs."
                        }
                    },
                    {
                        "name": "Mission n°2 : GSB",
                        "description": {
                            "contexte": "L’entreprise Galaxy Swiss Bourdin (GSB) est un laboratoire né d’une fusion entre 2 géants du secteur pharmaceutique.",
                            "besoin": "L’entreprise avait besoin d’une recherche par nom, labo ou secteur d’un visiteur, puis de pouvoir modifier : la région où il travaille, son rôle mais aussi la date à partir de quand il a travaillé.",
                            "environnement technologique": "JavaScript est le langage principal de ce PPE avec le Framework Vue. Celui-ci étant client nous avions besoin d’une API. Nous avons découvert un nouvelle IDE au nom de Visual Studio Code.",
                            "realisation": [
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">J’ai commencé par faire la partie graphique du site avant de commencer tout le back-end. Je voulais que la page de recherche soit éducative, simple d’utilisation. J’ai alors mis une barre de recherche au milieu de l’écran et qui montera lorsqu’on saisit une information. </div>",
                                "<div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/barre_recherche.png\" alt=\"barre_recherche.png\" class=\"img-fluid\"> </div> <div class=\"col-lg-6 col-md-6\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/recherche_visiteur.png\" alt=\"recherche_visiteur.png\" class=\"img-fluid\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">La recherche d’un visiteur se fait grâce à un web service où la méthode GET est utilisé. On envoie les données GET dans l’url en tapant simplement le nom de la page suivis d’un point d’interrogation, le nom de la variable et la donnée à envoyer. On peut aussi tester notre Api avec Postman qui est un environnement de développement pour les API. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/postman_visiteur_id.png\" alt=\"postman_visiteur_id.png\" class=\"img-fluid centerImg\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">On récupère donc la variable “id“ dans le script read.php sous la forme d’une variable dans la collection $_GET.  Pour me simplifier, je fais un parcours de celle-ci pour garder dans la variable $getVariable et pouvoir faire ensuite un switch case. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/controler_visiteur_read.png\" alt=\"controler_visiteur_read.png\" class=\"img-fluid centerImg\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">On voit que lorsqu’il récupère l’Id il va dans la fonction “readById“ dans la classe “tableVisiteur“. Dans cette fonction on peut voir que la requête est préparée avant d’être exécutée et retournée vers le Controller read.php. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/metier_visiteur_update.png\" alt=\"metier_visiteur_update.png\" class=\"img-fluid\"> </div>",
                                "<div class=\"col-lg-12 col-md-12\">Pour finir, le résultat de la requête est traité pour être convertie sous le format JSON. On peut maintenant récupérer le résultat de la requête, comme nous l’avons vu plus haut avec Postman. </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Pour un ajout, une modification ou une suppression, c’est à peu près la même chose sauf qu’au lieu d’utiliser GET nous prendrons : POST pour un ajout, PUT pour une modification et DELETE pour une suppression. L’envoie de donnée ne se passe pas par l’url du web service mais par l’envoie des données en JSON et le traitement de ces données dans le Controller. </div>",
                                "<div class=\"col-lg-6 col-md-6\"><img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/postman_visiteur_update.png\" alt=\"postman_visiteur_update.png\" class=\"img-fluid\"> </div> <div class=\"col-lg-6 col-md-6 divCenter\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/metier_visiteur_update.png\" alt=\"metier_visiteur_update.png\" class=\"img-fluid\"> </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/modif_visiteur.png\" alt=\"modif_visiteur.png\" class=\"img-fluid centerImg\"> </div>",
                                "</div>",
                                "<div data-aos=\"fade-right\" class=\"row\">",
                                "<div class=\"col-lg-12 col-md-12\">Revenons à notre recherche. Après avoir fait la recherche par nom nous avons une collection de visiteur que je stock dans une variable locale pour réutiliser les données. Je fais ensuite un v-for pour parcourir tous les visiteurs et faire afficher le tableau. </div> <div class=\"col-lg-12 col-md-12\"> <img src=\"http://hostName/src/assets/img/PPE/2eme_annee/GSB/code_rechercher_visiteur.png\" alt=\"code_rechercher_visiteur.png\" class=\"img-fluid\"> </div>",
                                "</div>"
                            ],
                            "bilan": "Beaucoup de difficulté pour la compréhension d’un web service et de ce nouveau Framework, même si les syntaxes sont à peu près les mêmes qu’Angular (vue : v-for, Angular : ng-for), un Framework qu'on avait déjà appris."
                        }
                    }
                ]
            }
        ]
    },
    "UQAM": {}
}
